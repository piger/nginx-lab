
user  www-data;
worker_processes  auto;

load_module modules/ndk_http_module.so;
load_module modules/ngx_http_lua_module.so;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format main_json escape=json
        '{'
            '"@timestamp": "$time_iso8601",'
            '"nginx":{'
                '"connection": $connection,'
                '"connection_requests": $connection_requests'
            '},'
            '"remote_user": "$remote_user",'
            '"http":{'
                '"body_bytes_sent": $body_bytes_sent,'
                '"content_length": "$content_length",'
                '"content_type": "$content_type",'
                '"document_root": "$document_root",'
                '"headers":{'
                    '"x_forwarded_for": "$http_x_forwarded_for",'
                    '"x_forwarded_host": "$http_x_forwarded_host",'
                    '"x_forwarded_proto": "$http_x_forwarded_proto"'
                '},'
                '"host": "$host",'
                '"method": "$request_method", '
                '"protocol": "$server_protocol",'
                '"referer": "$http_referer",'
                '"request": "$request",'
                '"request_completion": "$request_completion",'
                '"request_length": $request_length,'
                '"request_time": $request_time,'
                '"status_code": $status,'
                '"url_details":{'
                    '"path": "$uri",'
                    '"scheme": "$scheme"'
                '},'
                '"user_agent": "$http_user_agent"'
            '},'
            '"request_id": "$request_id",'
            '"tcp_conn":{'
                '"realip_remote_addr": "$realip_remote_addr",'
                '"realip_remote_port": $realip_remote_port,'
                '"remote_addr": "$remote_addr",'
                '"remote_port": "$remote_port",'
                '"server_name": "$server_name",'
                '"server_port": $server_port'
            '},'
            '"tcp_stats":{'
                '"rtt": $tcpinfo_rtt,'
                '"rttvar": $tcpinfo_rttvar,'
                '"snd_cwnd": $tcpinfo_snd_cwnd,'
                '"rcv_space": $tcpinfo_rcv_space'
            '},'
            '"ssl":{'
                '"ssl_server_name": "$ssl_server_name",'
                '"ssl_protocol": "$ssl_protocol",'
                '"ssl_cipher": "$ssl_cipher"'
            '},'
            '"time_local": "$time_local",'
            '"upstream":{'
                '"addr": "$upstream_addr",'
                '"bytes_received": "$upstream_bytes_received",'
                '"cache_status": "$upstream_cache_status",'
                '"connect_time": "$upstream_connect_time",'
                '"header_time": "$upstream_header_time",'
                '"headers":{'
                    '"x_accel_redirect": "$upstream_http_x_accel_redirect"'
                '},'
            '"response_time": "$upstream_response_time",'
            '"status": "$upstream_status"'
        '}'
    '}';

    access_log /var/log/nginx/access.log combined;
    access_log /var/log/nginx/access.log.json main_json;

    # Set the search path for lua packages to /etc/nginx/lua
    lua_package_path "$prefix/lua/?.lua;/etc/nginx/lua/?.lua;;";

    # Set default values for variables manipulated by Lua scripts.
    map $request $example_var { default ""; }

    # Run the following Lua scripts in the log phase.
    log_by_lua '
        require("example").run()
    ';

    # Misc settings
    sendfile on;
    keepalive_timeout 65;

    # Include the rest of the configuration
    include /etc/nginx/conf.d/*.conf;
}
